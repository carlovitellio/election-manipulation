[Output]
# 1 for creating a file containing a graph in the out folder, 0 otherwise
print_graph = 0
# 1 for creating a file containing the results of the influece in the out folder,
# 0 otherwise
output_results = 1

[Graph_option]
library = '../lib/libBoostCreators.so ../lib/libInputCreator.so'
graph_type = Small-World
# Input file where it is stored the graph to manipulate if graph_type is equal to "Input-file"
Input_graph = ../input/test_w_property.dot

# number of vertices
N = 1000
# number of edges
E = 4000

[Graph_option/Input_graph]
# 1 for reading attributes from the input file, 0 otherwise
Read_attributes = 0

[Graph_option/small_world_generator]
# Number of neighbours connected
k = 8
# Probability of reconnection
p = 0.1

[Graph_option/R-MAT]
# Those four parameters have to be probabilities and to sum up to 1
a = 0.35
b = 0.27
c = 0.27
d = 0.11

[Graph_option/PLOD]
alpha = 0.93
beta = 1000

[Person_option/Resistance]
distribution = Poisson
filename = ../input/resistanceDistrib.txt

[Person_option/Resistance/poisson]
lambda = 1000

[Person_option/ProbabilityVoting]
distribution = Beta
filename = ../input/VotingDistrib.txt

[Person_option/ProbabilityVoting/beta]
alpha = 1
beta = 6

[InfluenceOption]
rounds = 10000

[InfluenceOption/Estimation]
# 1 to estimate properly the vertex's utility, 0 to approximate it with just its neighbours
complete = 1
estim_method = Power
